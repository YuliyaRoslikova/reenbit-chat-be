{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts web app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of contacts web app"
  },
  "tags": [
    { "name": "Contacts", "description": "Operations about users." },
    { "name": "Auth", "description": "Auth operations." }
  ],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://nodejs-hw-mongodb-0he4.onrender.com" }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get list of contacts",
        "operationId": "getContacts",
        "description": "Get list of users with this endpoint",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer" },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": { "type": "integer", "example": 10 }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": ["work", "home", "personal"],
              "example": "work"
            }
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": { "type": "boolean", "example": true }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/contacts" }
                        },
                        "page": { "type": "number", "example": 2 },
                        "perPage": { "type": "number", "example": 4 },
                        "totalItems": { "type": "number", "example": 4 },
                        "totalPages": { "type": "number", "example": 4 },
                        "hasNextPage": { "type": "boolean", "example": false },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "post": {
        "tags": ["Contacts"],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["name", "phoneNumber", "contactType", "userId"],
                "properties": {
                  "name": {
                    "description": "Student's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "Contact's number",
                    "type": "number",
                    "example": 380123456789
                  },
                  "isFavourite": {
                    "description": "Favourite contact or not",
                    "type": "boolean",
                    "example": true
                  },
                  "contactType": {
                    "description": "Contact's type",
                    "type": "string",
                    "enum": ["work", "home", "personal"]
                  },
                  "userId": {
                    "description": "User's id",
                    "type": "string",
                    "example": "668c2570bd8f5be3a0eb0951"
                  },
                  "photo": {
                    "description": "Contact's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contacts"
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "665d88ffe136ae7727caed35"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["name", "phoneNumber", "contactType"],
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 665d88ffe136ae7727caed35!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contacts"
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Contacts"],
        "summary": "Patch contact by id",
        "operationId": "patchContact",
        "description": "Patch contact by id",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "665d88ffe136ae7727caed35"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patch contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["name", "phoneNumber", "contactType"],
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 665d88ffe136ae7727caed35!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contacts"
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete contact by id",
        "operationId": "deleteContact",
        "description": "Delete contact by id",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "665d88ffe136ae7727caed35"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 204 },
                    "message": { "type": "string", "example": "No Content" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": { "bearerAuth": { "type": "http", "scheme": "bearer" } },
    "schemas": {
      "contacts": {
        "type": "object",
        "required": ["_id", "name", "phoneNumber", "contactType"],
        "properties": {
          "_id": {
            "description": "Contact's id",
            "type": "string",
            "example": "665d88ffe136ae7727caed35"
          },
          "name": {
            "description": "Contact's name",
            "type": "string",
            "example": "John Doe"
          },
          "phoneNumber": {
            "description": "Contact's number",
            "type": "number",
            "example": 380123456789
          },
          "email": {
            "description": "Contact's email",
            "type": "string",
            "example": "email@gmail.com"
          },
          "isFavourite": {
            "description": "Favourite contact or not",
            "type": "boolean",
            "example": true
          },
          "contactType": {
            "description": "Contact's type",
            "type": "string",
            "enum": ["work", "home", "personal"]
          },
          "userId": {
            "description": "User's id",
            "type": "string",
            "example": "668c2570bd8f5be3a0eb0951"
          },
          "photo": {
            "description": "Link to contact's photo",
            "type": "string",
            "example": "<https://res.cloudinary.com/uqwgdu/image/upload/image.png>"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": { "type": "integer", "example": 401 },
                "message": { "type": "string", "example": "UnauthorizedError" },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": { "type": "integer", "example": 404 },
                "message": { "type": "string", "example": "Not found error" },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": { "type": "string", "example": "Not found!" }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
